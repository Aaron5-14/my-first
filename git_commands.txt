git config --global user.name
git config --global user.email
git config --global core.editor vim (or editor.core?)
git status
git init
git add (-A for all modified changed files)
git commit (-m + message!)
git log (history)
git commit --amend (modify the mssage of files of last commit)
atomic commit: commit files one by one instead of all of them at once!
git log -n <number> (e.g. -n 3)
git log --pretty=oneline
git log --abbrev-commit
git log --online
make a .gitignore file ( use gitignore.io site or sth) and in that file add name of files you dont want git to trak (dir/ for directories)
git config --global core.editor "code --wait"  (fond in the git site ez search)
git master  = github main
the convention is to have the master bransh as the stable branch but it is not a rule
hwo to change branch? Head points to a reference to a branch! if head -> master then the book is opened in master if Head-> branchx then..
git branch
git commit -a -m "text" add and commit!!!
git branch <nameofbranch> (make a new branch(
git switch <name of branch> !!
git checkout <branchname>
git checkout -b <branchname> create and change into new branch
git switch -c <branchname> create and switch to branch
git branch -d <branchname> (delete branch)
git branch -D (--delete --force)

MERGE types: 1. if master did not change while the branch was changing (fast-forward)
2. if master changed but the changes are separate (without conflict)
3. if master changed but changes have overlaps (with conflict)

git merge <nameofbranch>  (merge nameofbranch with current branch)
